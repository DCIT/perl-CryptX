name: combined

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        perl-version:
          - '5.10'
          - '5.12'
          - '5.14'
          - '5.16'
          - '5.18'
          - '5.20'
          - '5.22'
          - '5.30'
          - '5.32'
    container:
      image: perl:${{ matrix.perl-version }}
    steps:
      - uses: actions/checkout@v2
      - name: perl -V
        run: perl -V
      - name: Install dependencies
        run: |
          cpanm -n --installdeps .
      - name: Run build
        run: |
          perl Makefile.PL
          make -j4
        env:
          AUTHOR_MODE: 1
      - name: Run tests
        run: prove -bv t
        env:
          AUTHOR_MODE: 1

  mac:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Perl
        run: brew install perl
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: curl -L https://cpanmin.us | perl - --notest --installdeps .
      - name: Run build
        run: |
          perl Makefile.PL
          make -j4
        env:
          AUTHOR_MODE: 1
      - name: Run tests
        run: prove -bv t
        env:
          AUTHOR_MODE: 1

  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Perl
        run: |
          choco install strawberryperl
          echo 'C:\strawberry\c\bin' >> $GITHUB_PATH
          echo 'C:\strawberry\perl\site\bin' >> $GITHUB_PATH
          echo 'C:\strawberry\perl\bin' >> $GITHUB_PATH
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: curl -L https://cpanmin.us | perl - --notest --installdeps .
      - name: Run build
        run: |
          perl Makefile.PL
          make -j4
        env:
          AUTHOR_MODE: 1
      - name: Run tests
        run: prove -bv t
        env:
          AUTHOR_MODE: 1

  cygwin:
    runs-on: windows-latest

    steps:
      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
            platform: x64
            packages: perl_base perl-ExtUtils-MakeMaker make gcc-g++ bash
      - uses: actions/checkout@v2
      - run: perl -V
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - run: cpan App::cpanminus
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: Install Dependencies
        run: cd $GITHUB_WORKSPACE; cpanm --verbose --notest --installdeps .
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: perl Makefile.PL
        run: cd $GITHUB_WORKSPACE; perl Makefile.PL
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make
        run: cd $GITHUB_WORKSPACE; make -j4
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make test
        run: cd $GITHUB_WORKSPACE; prove -bv t
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
        env:
          AUTHOR_MODE: 1
